buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.0'
        classpath 'gradle.plugin.org.jetbrains:gradle-intellij-plugin:0.0.23'
        classpath 'de.undercouch:gradle-download-task:2.1.0'
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'de.undercouch.download'

intellij {
    version '15.0'
    plugins 'kotlin'
}

mainClassName = "org.jetbrains.printerGenerator.MainKt"

sourceSets {

    main {
        kotlin {
            srcDirs = ['src']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.0'
    compile 'org.jetbrains.kotlin:kotlin-runtime:1.0.0'
    compile files('libs/format.jar')
    compile files('libs/printer-core.jar')
}

idea.module {
    name = "PrinterGenerator"
    jdkName = "IntelliJ IDEA SDK"
    sourceDirs += file('src')
}

task downloadLibs {
    def libs = new File("${projectDir}${File.separator}libs${File.separator}")
    if (!libs.exists()) {
        libs.mkdirs()
    }
    def fmt = new File("${projectDir}${File.separator}libs${File.separator}format.jar")
    new URL('https://github.com/IgorOzernykh/printer-core/releases/download/1.0/format.jar')
            .withInputStream{ i -> fmt.withOutputStream{ it << i }}
    def core = new File("${projectDir}${File.separator}libs${File.separator}printer-core.jar")
    new URL('https://github.com/IgorOzernykh/printer-core/releases/download/1.0/printer-core.jar')
            .withInputStream{ i -> core.withOutputStream{ it << i }}
}

task setup {
    dependsOn downloadLibs, ideaModule, run
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}


